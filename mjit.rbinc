// -*- c -*-
// DO NOT MODIFY THIS FILE DIRECTLY.
// auto-generated file
//   by ./tool/mk_builtin_loader.rb
//   with mjit.rb
#include "internal/compilers.h"     /* for MAYBE_UNUSED */
#include "internal/warnings.h"      /* for COMPILER_WARNING_PUSH */
#include "ruby/ruby.h"              /* for VALUE */
#include "builtin.h"                /* for RB_BUILTIN_FUNCTION */
struct rb_execution_context_struct; /* in vm_core.h */

static VALUE builtin_inline_class_4(struct rb_execution_context_struct *ec, const VALUE self)
{
#line 4 "mjit.rb"
return RBOOL(mjit_enabled);
#line 17 "mjit.rbinc"
}

static VALUE builtin_inline_class_9(struct rb_execution_context_struct *ec, const VALUE self)
{
MAYBE_UNUSED(const VALUE) wait = rb_vm_lvar(ec, -4);
#line 9 "mjit.rb"
return mjit_pause(RTEST(wait));
#line 25 "mjit.rbinc"
}

static VALUE builtin_inline_class_14(struct rb_execution_context_struct *ec, const VALUE self)
{
#line 14 "mjit.rb"
return mjit_resume();
#line 32 "mjit.rbinc"
}

static void
mjit_compile_invokebuiltin_for__bi0(VALUE buf, long index, unsigned stack_size, bool inlinable_p)
{
    rb_str_catf(buf, "    VALUE self = GET_SELF();\n");
    rb_str_catf(buf, "    typedef VALUE (*func)(rb_execution_context_t *, VALUE);\n");
    if (inlinable_p) {
        rb_str_catf(buf, "%s", "    {\n");
        rb_str_catf(buf, "%s", "#line 4 \"mjit.rb\"\n");
        rb_str_catf(buf, "%s", "    return RBOOL(mjit_enabled);\n");
        rb_str_catf(buf, "%s", "#line 38 \"mjit.rbinc\"\n");
        rb_str_catf(buf, "%s", "    }\n");
        rb_str_catf(buf, "%s", "    \n");
        return;
    }
    rb_str_catf(buf, "    func f = (func)%"PRIuVALUE"; /* == builtin_inline_class_4 */\n", (VALUE)builtin_inline_class_4);
    rb_str_catf(buf, "    val = f(ec, self);\n");
}

static void
mjit_compile_invokebuiltin_for__bi1(VALUE buf, long index, unsigned stack_size, bool inlinable_p)
{
    rb_str_catf(buf, "    VALUE self = GET_SELF();\n");
    rb_str_catf(buf, "    typedef VALUE (*func)(rb_execution_context_t *, VALUE);\n");
    if (inlinable_p) {
        rb_str_catf(buf, "%s", "    {\n");
        rb_str_catf(buf, "%s", "    MAYBE_UNUSED(const VALUE) wait = rb_vm_lvar(ec, -4);\n");
        rb_str_catf(buf, "%s", "#line 9 \"mjit.rb\"\n");
        rb_str_catf(buf, "%s", "    return mjit_pause(RTEST(wait));\n");
        rb_str_catf(buf, "%s", "#line 45 \"mjit.rbinc\"\n");
        rb_str_catf(buf, "%s", "    }\n");
        rb_str_catf(buf, "%s", "    \n");
        return;
    }
    rb_str_catf(buf, "    func f = (func)%"PRIuVALUE"; /* == builtin_inline_class_9 */\n", (VALUE)builtin_inline_class_9);
    rb_str_catf(buf, "    val = f(ec, self);\n");
}

static void
mjit_compile_invokebuiltin_for__bi2(VALUE buf, long index, unsigned stack_size, bool inlinable_p)
{
    rb_str_catf(buf, "    VALUE self = GET_SELF();\n");
    rb_str_catf(buf, "    typedef VALUE (*func)(rb_execution_context_t *, VALUE);\n");
    if (inlinable_p) {
        rb_str_catf(buf, "%s", "    {\n");
        rb_str_catf(buf, "%s", "#line 14 \"mjit.rb\"\n");
        rb_str_catf(buf, "%s", "    return mjit_resume();\n");
        rb_str_catf(buf, "%s", "#line 51 \"mjit.rbinc\"\n");
        rb_str_catf(buf, "%s", "    }\n");
        rb_str_catf(buf, "%s", "    \n");
        return;
    }
    rb_str_catf(buf, "    func f = (func)%"PRIuVALUE"; /* == builtin_inline_class_14 */\n", (VALUE)builtin_inline_class_14);
    rb_str_catf(buf, "    val = f(ec, self);\n");
}

void Init_builtin_mjit(void)
{
  // table definition
  static const struct rb_builtin_function mjit_table[] = {
    RB_BUILTIN_FUNCTION(0, _bi0, builtin_inline_class_4, 0, mjit_compile_invokebuiltin_for__bi0),
    RB_BUILTIN_FUNCTION(1, _bi1, builtin_inline_class_9, 0, mjit_compile_invokebuiltin_for__bi1),
    RB_BUILTIN_FUNCTION(2, _bi2, builtin_inline_class_14, 0, mjit_compile_invokebuiltin_for__bi2),
    RB_BUILTIN_FUNCTION(-1, NULL, NULL, 0, 0),
  };

  // arity_check
COMPILER_WARNING_PUSH
#if GCC_VERSION_SINCE(5, 1, 0) || defined __clang__
COMPILER_WARNING_ERROR(-Wincompatible-pointer-types)
#endif
  if (0) rb_builtin_function_check_arity0(builtin_inline_class_4);
  if (0) rb_builtin_function_check_arity0(builtin_inline_class_9);
  if (0) rb_builtin_function_check_arity0(builtin_inline_class_14);
COMPILER_WARNING_POP

  // load
  rb_load_with_builtin_functions("mjit", mjit_table);
}
