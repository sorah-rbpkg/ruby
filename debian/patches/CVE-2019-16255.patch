Index: ruby2.1-2.1.5/lib/shell/command-processor.rb
===================================================================
--- ruby2.1-2.1.5.orig/lib/shell/command-processor.rb	2019-11-23 19:20:32.174782871 +0100
+++ ruby2.1-2.1.5/lib/shell/command-processor.rb	2019-11-23 19:20:32.170782673 +0100
@@ -181,6 +181,9 @@
             top_level_test(command, file1)
           end
         else
+          unless FileTest.methods(false).include?(command.to_sym)
+            raise "unsupported command: #{ command }"
+          end
           if file2
             FileTest.send(command, file1, file2)
           else
Index: ruby2.1-2.1.5/test/shell/test_command_processor.rb
===================================================================
--- ruby2.1-2.1.5.orig/test/shell/test_command_processor.rb	2019-11-23 19:20:32.174782871 +0100
+++ ruby2.1-2.1.5/test/shell/test_command_processor.rb	2019-11-23 19:21:17.225018088 +0100
@@ -66,4 +66,23 @@
     Process.waitall
     Dir.rmdir(path)
   end
+
+  def test_test
+    name = "foo#{exeext}"
+    path = File.join(@tmpdir, name)
+    open(path, "w", 0644) {}
+
+    assert_equal(true, @shell[?e, path])
+    assert_equal(true, @shell[:e, path])
+    assert_equal(true, @shell["e", path])
+    assert_equal(true, @shell[:exist?, path])
+    assert_equal(true, @shell["exist?", path])
+    assert_raise_with_message(RuntimeError, /unsupported command/) do
+      assert_equal(true, @shell[:instance_eval, path])
+    end
+  ensure
+    Process.waitall
+    File.unlink(path)
+  end
+
 end
