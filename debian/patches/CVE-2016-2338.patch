Description: CVE-2016-2338
 An exploitable heap overflow vulnerability exists in the
 Psych::Emitter start_document function of Ruby. In Psych::Emitter
 start_document function heap buffer "head" allocation is made based
 on tags array length. Specially constructed object passed as element
 of tags array can increase this array size after mentioned allocation
 and cause heap overflow.
---

Author: Abhijith PA <abhijith@debian.org>
Origin: https://git.ruby-lang.org/ruby.git/commit/?id=db48c307944a9a18877236bdf9e9b778875f38ed
Last-Update: 2020-03-24

--- ruby2.1-2.1.5.orig/ext/psych/psych_emitter.c
+++ ruby2.1-2.1.5/ext/psych/psych_emitter.c
@@ -139,16 +139,18 @@ static VALUE start_document(VALUE self,
 
     if(RTEST(tags)) {
 	int i = 0;
+        long len;
 #ifdef HAVE_RUBY_ENCODING_H
 	rb_encoding * encoding = rb_utf8_encoding();
 #endif
 
 	Check_Type(tags, T_ARRAY);
 
-	head  = xcalloc((size_t)RARRAY_LEN(tags), sizeof(yaml_tag_directive_t));
+	len = RARRAY_LEN(tags);
+	head  = xcalloc((size_t)len, sizeof(yaml_tag_directive_t));
 	tail  = head;
 
-	for(i = 0; i < RARRAY_LEN(tags); i++) {
+	for(i = 0; i < len && i < RARRAY_LEN(tags); i++) {
 	    VALUE tuple = RARRAY_PTR(tags)[i];
 	    VALUE name;
 	    VALUE value;
--- ruby2.1-2.1.5.orig/test/psych/test_emitter.rb
+++ ruby2.1-2.1.5/test/psych/test_emitter.rb
@@ -90,5 +90,20 @@ module Psych
         @emitter.start_sequence(nil, nil, true, :foo)
       end
     end
+
+    def test_resizing_tags
+      tags = []
+      version = [1,1]
+      obj = Object.new
+      obj.instance_variable_set(:@tags, tags)
+      def obj.to_str
+        (1..10).map{|x| @tags.push(["AAAA","BBBB"])}
+        return "x"
+      end
+
+      tags.push([obj, "tag:TALOS"])
+      @emitter.start_document(version, tags, 0)
+      assert(true)
+    end
   end
 end
