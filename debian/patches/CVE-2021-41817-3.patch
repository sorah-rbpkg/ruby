From 376c65942bd1d81803f14d37351737df60ec4664 Mon Sep 17 00:00:00 2001
From: Jean Boussier <jean.boussier@gmail.com>
Date: Tue, 16 Nov 2021 14:03:42 +0100
Subject: [PATCH] check_limit: also handle symbols

---
 ext/date/date_core.c         |  1 +
 test/date/test_date_parse.rb | 24 ++++++++++++++++++++++++
 2 files changed, 25 insertions(+)

Index: ruby2.5-2.5.1/ext/date/date_core.c
===================================================================
--- ruby2.5-2.5.1.orig/ext/date/date_core.c
+++ ruby2.5-2.5.1/ext/date/date_core.c
@@ -4305,6 +4305,7 @@ static void
 check_limit(VALUE str, VALUE opt)
 {
     if (NIL_P(str)) return;
+    if (SYMBOL_P(str)) str = rb_sym2str(str);
 
     StringValue(str);
     size_t slen = RSTRING_LEN(str);
Index: ruby2.5-2.5.1/test/date/test_date_parse.rb
===================================================================
--- ruby2.5-2.5.1.orig/test/date/test_date_parse.rb
+++ ruby2.5-2.5.1/test/date/test_date_parse.rb
@@ -827,6 +827,10 @@ class TestDateParse < Test::Unit::TestCa
 
     h = Date._iso8601(nil)
     assert_equal({}, h)
+
+    h = Date._iso8601('01-02-03T04:05:06Z'.to_sym)
+    assert_equal([2001, 2, 3, 4, 5, 6, 0],
+      h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
   end
 
   def test__rfc3339
@@ -845,6 +849,10 @@ class TestDateParse < Test::Unit::TestCa
 
     h = Date._rfc3339(nil)
     assert_equal({}, h)
+
+    h = Date._rfc3339('2001-02-03T04:05:06Z'.to_sym)
+    assert_equal([2001, 2, 3, 4, 5, 6, 0],
+      h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
   end
 
   def test__xmlschema
@@ -930,6 +938,10 @@ class TestDateParse < Test::Unit::TestCa
 
     h = Date._xmlschema(nil)
     assert_equal({}, h)
+
+    h = Date._xmlschema('2001-02-03'.to_sym)
+    assert_equal([2001, 2, 3, nil, nil, nil, nil],
+      h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
   end
 
   def test__rfc2822
@@ -965,6 +977,10 @@ class TestDateParse < Test::Unit::TestCa
 
     h = Date._rfc2822(nil)
     assert_equal({}, h)
+
+    h = Date._rfc2822('Sat, 3 Feb 2001 04:05:06 UT'.to_sym)
+    assert_equal([2001, 2, 3, 4, 5, 6, 0],
+      h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
   end
 
   def test__httpdate
@@ -988,6 +1004,10 @@ class TestDateParse < Test::Unit::TestCa
 
     h = Date._httpdate(nil)
     assert_equal({}, h)
+
+    h = Date._httpdate('Sat, 03 Feb 2001 04:05:06 GMT'.to_sym)
+    assert_equal([2001, 2, 3, 4, 5, 6, 0],
+      h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
   end
 
   def test__jisx0301
@@ -1019,6 +1039,10 @@ class TestDateParse < Test::Unit::TestCa
 
     h = Date._jisx0301(nil)
     assert_equal({}, h)
+
+    h = Date._jisx0301('H13.02.03T04:05:06.07+0100'.to_sym)
+    assert_equal([2001, 2, 3, 4, 5, 6, 3600],
+      h.values_at(:year, :mon, :mday, :hour, :min, :sec, :offset))
   end
 
   def test_iso8601
