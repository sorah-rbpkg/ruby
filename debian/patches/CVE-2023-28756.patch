Origin: https://github.com/ruby/ruby/commit/2cb830602f52e7e76c6781115e7938b21f881c4f
Origin: https://github.com/ruby/ruby/commit/be9026a7b4d2c3a6bd7f109334149f4da08cf43f
Origin: https://github.com/ruby/ruby/commit/e3f18f7d2e034f20053d7bf2fc7a50f8b7e1a27a
Reviewed-by: Sylvain Beucler <beuc@debian.org>
Last-Update: 2024-08-03

From 2cb830602f52e7e76c6781115e7938b21f881c4f Mon Sep 17 00:00:00 2001
From: Nobuyoshi Nakada <nobu@ruby-lang.org>
Date: Tue, 29 Nov 2022 16:22:15 +0900
Subject: Fix quadratic backtracking on invalid time

https://hackerone.com/reports/1485501
---
 lib/time.rb | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

From be9026a7b4d2c3a6bd7f109334149f4da08cf43f Mon Sep 17 00:00:00 2001
From: Nobuyoshi Nakada <nobu@ruby-lang.org>
Date: Tue, 29 Nov 2022 16:22:15 +0900
Subject: Test for quadratic backtracking on invalid time

https://hackerone.com/reports/1485501
---
 test/test_time.rb | 9 +++++++++
 1 file changed, 9 insertions(+)

From e3f18f7d2e034f20053d7bf2fc7a50f8b7e1a27a Mon Sep 17 00:00:00 2001
From: Nobuyoshi Nakada <nobu@ruby-lang.org>
Date: Fri, 30 Dec 2022 14:32:05 +0900
Subject: Make RFC2822 regexp linear

https://hackerone.com/reports/1485501
---
 lib/time.rb | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

Index: ruby/lib/time.rb
===================================================================
--- ruby.orig/lib/time.rb
+++ ruby/lib/time.rb
@@ -501,8 +501,8 @@ class Time
           (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s+
           (\d{2,})\s+
           (\d{2})\s*
-          :\s*(\d{2})\s*
-          (?::\s*(\d{2}))?\s+
+          :\s*(\d{2})
+          (?:\s*:\s*(\d\d))?\s+
           ([+-]\d{4}|
            UT|GMT|EST|EDT|CST|CDT|MST|MDT|PST|PDT|[A-IK-Z])/ix =~ date
         # Since RFC 2822 permit comments, the regexp has no right anchor.
Index: ruby/test/test_time.rb
===================================================================
--- ruby.orig/test/test_time.rb
+++ ruby/test/test_time.rb
@@ -62,6 +62,15 @@ class TestTimeExtension < Test::Unit::Te
     assert_equal(true, t.utc?)
   end
 
+  def test_rfc2822_nonlinear
+    pre = ->(n) {"0 Feb 00 00 :00" + " " * n}
+    assert_linear_performance([100, 500, 5000, 50_000], pre: pre) do |s|
+      assert_raise(ArgumentError) do
+        Time.rfc2822(s)
+      end
+    end
+  end
+
   def test_encode_rfc2822
     t = Time.utc(1)
     assert_equal("Mon, 01 Jan 0001 00:00:00 -0000", t.rfc2822)
